package com.example.watch_together.tabHost

import android.util.Log
import androidx.compose.foundation.layout.size
import androidx.compose.material.icons.Icons
import androidx.compose.material.icons.filled.Favorite
import androidx.compose.material.icons.filled.Search
import androidx.compose.material.icons.filled.Settings
import androidx.compose.material3.*
import androidx.compose.runtime.*
import androidx.compose.ui.Modifier
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.unit.dp
import com.example.watch_together.models.Screen
import com.example.watch_together.viewModels.FavoritesViewModel

@OptIn(ExperimentalMaterial3Api::class)
@Composable
fun BottomNavigationBar(
    selectedScreen: Screen,
    onScreenSelected: (Screen) -> Unit,
    favoritesViewModel: FavoritesViewModel
) {
    Log.d("BottomNavigationBar", "üîÑ –ö–æ–º–ø–æ–Ω–µ–Ω—Ç BottomNavigationBar –ø–µ—Ä–µ—Å–æ–∑–¥–∞–ª—Å—è. –¢–µ–∫—É—â–∏–π —ç–∫—Ä–∞–Ω: ${selectedScreen.route}")

    val uiState by favoritesViewModel.uiState.collectAsState()
    val hasViewedFavorites = uiState.hasViewedFavorites

    Log.d("BottomNavigationBar", "üíæ hasViewedFavorites = $hasViewedFavorites")

    NavigationBar(containerColor = Color.White.copy(0.8f), tonalElevation = 0.dp, contentColor = Color.White) {

        NavigationBarItem(
            selected = selectedScreen == Screen.Search,
            onClick = {
                Log.d("BottomNavigationBar", "üü¢ –ù–∞–∂–∞—Ç–∞ –≤–∫–ª–∞–¥–∫–∞ –ü–æ–∏—Å–∫. –¢–µ–∫—É—â–∏–π —ç–∫—Ä–∞–Ω: ${selectedScreen.route}")
                if (selectedScreen != Screen.Search) {
                    Log.d("BottomNavigationBar", "‚úÖ –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —ç–∫—Ä–∞–Ω Search")
                    onScreenSelected(Screen.Search)
                } else {
                    Log.d("BottomNavigationBar", "‚ùå –£–∂–µ –Ω–∞ —ç–∫—Ä–∞–Ω–µ Search. –ü–µ—Ä–µ—Ö–æ–¥ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è.")
                }
            },
            icon = { Icon(Icons.Default.Search, contentDescription = "–ü–æ–∏—Å–∫") },
            label = { Text("–ü–æ–∏—Å–∫") }
        )

        NavigationBarItem(
            selected = selectedScreen == Screen.Favorites,
            onClick = {
                Log.d("BottomNavigationBar", "üü¢ –ù–∞–∂–∞—Ç–∞ –≤–∫–ª–∞–¥–∫–∞ –ò–∑–±—Ä–∞–Ω–Ω–æ–µ. –¢–µ–∫—É—â–∏–π —ç–∫—Ä–∞–Ω: ${selectedScreen.route}")
                if (selectedScreen != Screen.Favorites) {
                    Log.d("BottomNavigationBar", "‚úÖ –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —ç–∫—Ä–∞–Ω Favorites")
                    onScreenSelected(Screen.Favorites)
                    favoritesViewModel.markFavoritesAsViewed()
                } else {
                    Log.d("BottomNavigationBar", "‚ùå –£–∂–µ –Ω–∞ —ç–∫—Ä–∞–Ω–µ Favorites. –ü–µ—Ä–µ—Ö–æ–¥ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è.")
                }
            },
            icon = {
                BadgedBox(badge = {
                    if (!hasViewedFavorites) {
                        Badge(
                            modifier = Modifier.size(8.dp),
                            containerColor = Color.Red
                        ) { }
                    }
                }) {
                    Icon(Icons.Default.Favorite, contentDescription = "–ò–∑–±—Ä–∞–Ω–Ω–æ–µ")
                }
            },
            label = { Text("–ò–∑–±—Ä–∞–Ω–Ω–æ–µ") }
        )

        NavigationBarItem(
            selected = selectedScreen == Screen.Settings,
            onClick = {
                Log.d("BottomNavigationBar", "üü¢ –ù–∞–∂–∞—Ç–∞ –≤–∫–ª–∞–¥–∫–∞ –ù–∞—Å—Ç—Ä–æ–π–∫–∏. –¢–µ–∫—É—â–∏–π —ç–∫—Ä–∞–Ω: ${selectedScreen.route}")
                if (selectedScreen != Screen.Settings) {
                    Log.d("BottomNavigationBar", "‚úÖ –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —ç–∫—Ä–∞–Ω Settings")
                    onScreenSelected(Screen.Settings)
                } else {
                    Log.d("BottomNavigationBar", "‚ùå –£–∂–µ –Ω–∞ —ç–∫—Ä–∞–Ω–µ Settings. –ü–µ—Ä–µ—Ö–æ–¥ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è.")
                }
            },
            icon = { Icon(Icons.Default.Settings, contentDescription = "–ù–∞—Å—Ç—Ä–æ–π–∫–∏") },
            label = { Text("–ù–∞—Å—Ç—Ä–æ–π–∫–∏") }
        )
    }
}
