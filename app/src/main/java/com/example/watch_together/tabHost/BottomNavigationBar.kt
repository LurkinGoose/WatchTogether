package com.example.watch_together.tabHost

import android.util.Log
import androidx.compose.material.icons.Icons
import androidx.compose.material.icons.filled.Favorite
import androidx.compose.material.icons.filled.Search
import androidx.compose.material.icons.filled.Settings
import androidx.compose.material3.*
import androidx.compose.runtime.*
import androidx.navigation.NavController
import androidx.navigation.compose.currentBackStackEntryAsState
import com.example.watch_together.models.Screen

@Composable
fun BottomNavigationBar(navController: NavController) {
    val navBackStackEntry by navController.currentBackStackEntryAsState()
    val currentRoute = navBackStackEntry?.destination?.route

    Log.d("BottomNavigationBar", "üîÑ –°–æ–∑–¥–∞–Ω–∏–µ BottomNavigationBar, —Ç–µ–∫—É—â–∏–π –º–∞—Ä—à—Ä—É—Ç: $currentRoute")

    NavigationBar {
        listOf(
            Screen.Search to Icons.Default.Search,
            Screen.Favorites to Icons.Default.Favorite,
            Screen.Settings to Icons.Default.Settings
        ).forEach { (screen, icon) ->
            val isSelected = currentRoute == screen.route

            Log.d("BottomNavigationBar", "‚ñ∂Ô∏è –≠–∫—Ä–∞–Ω: ${screen.route}, –≤—ã–±—Ä–∞–Ω: $isSelected")

            NavigationBarItem(
                selected = isSelected,
                onClick = {
                    if (!isSelected) {
                        Log.d("BottomNavigationBar", "‚úÖ –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ ${screen.route}")
                        navController.navigate(screen.route) {
                            launchSingleTop = true  // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç –ø–æ–≤—Ç–æ—Ä–Ω—ã–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –Ω–∞ —Ç–æ—Ç –∂–µ —ç–∫—Ä–∞–Ω
                            restoreState = true     // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ —ç–∫—Ä–∞–Ω–∞
                        }
                    }
                },
                icon = { Icon(icon, contentDescription = screen.route) },
                label = { Text(screen.label) }
            )
        }
    }
}
